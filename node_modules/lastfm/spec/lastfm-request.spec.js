var nock = require('nock')
  , LastFmRequest = require('../lib/lastfm/lastfm-request')
  , LastFmNode = require('../lib/lastfm').LastFmNode;

describe('LastFmRequest', function() {
  var lastfm;

  beforeEach(function() {
    nock.disableNetConnect();
    lastfm = new LastFmNode();
  });

  afterEach(function() {
    nock.cleanAll();
  });

  function wildcardPath() {
    return '*'
  }

  it('creates a get request', function() {
    var expected = nock('http://ws.audioscrobbler.com')
      .filteringPath(wildcardPath)
      .get('*')
      .reply();
    var request = new LastFmRequest(lastfm, 'any.method');
    expected.done();
  });

  it('defaults user agent to lastfm-node', function() {
    var expected = nock('http://ws.audioscrobbler.com')
      .filteringPath(wildcardPath)
      .matchHeader('User-Agent', 'lastfm-node')
      .get('*')
      .reply();
    var request = new LastFmRequest(lastfm, 'any.method');
    expected.done();
  });

  it('will use user agent specified in options', function() {
    var useragent = 'custom-user-agent'
      , lastfm = new LastFmNode({ useragent: useragent });

    var expected = nock('http://ws.audioscrobbler.com')
      .filteringPath(wildcardPath)
      .matchHeader('User-Agent', useragent)
      .get('*')
      .reply();
    
    var request = new LastFmRequest(lastfm, 'any.method');
    expected.done();
  });

  it('bubbles up errors', function() {
    var expected = nock('http://ws.audioscrobbler.com')
      .filteringPath(wildcardPath)
      .get('*')
      .reply(500, 'Server errrrrror');
    var request = new LastFmRequest(lastfm, 'any.method', {
      handlers: { error: function() { console.log('sss'); } }
    });
    expected.done();
  });
});
